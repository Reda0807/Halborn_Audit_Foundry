syntax = "proto3";
package gaia.hal.v1beta1;

option go_package = "github.com/HAL-Developers/gaia/x/hal/types";
option (gogoproto.equal_all) = false;
option (gogoproto.goproto_getters_all) = false;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";

// Msg defines the x/hal Msg service.
service Msg {
  // MintHAL defines a method for converting collateral coins into HAL coin.
  rpc MintHAL(MsgMintHAL) returns (MsgMintHALResponse);

  // RedeemCollateral defines a method for converting HAL coin into collateral coins from the module pool.
  rpc RedeemCollateral(MsgRedeemCollateral) returns (MsgRedeemCollateralResponse);
}

// MsgMintHAL defines a SDK message for the Msg/MintHAL request type.
message MsgMintHAL {
  // address is the Bech32-encoded address of the target account.
  string address = 1 [
    (gogoproto.moretags) = "yaml:\"address\""
  ];

  // collateral_amount are collateral token that should be exchanged to HAL.
  repeated cosmos.base.v1beta1.Coin collateral_amount = 2 [
    (gogoproto.moretags) = "yaml:\"collateral_amount\"",
    (gogoproto.nullable) = false
  ];
}

// MsgMintHALResponse defines the Msg/MintHAL response type.
message MsgMintHALResponse {
  // minted_amount is a minted HAL token.
  cosmos.base.v1beta1.Coin minted_amount = 1 [
    (gogoproto.moretags) = "yaml:\"minted_amount\"",
    (gogoproto.nullable) = false
  ];

  // collaterals_amount are collateral tokens used for the mint.
  repeated cosmos.base.v1beta1.Coin collaterals_amount = 2 [
    (gogoproto.moretags) = "yaml:\"collaterals_amount\"",
    (gogoproto.nullable) = false
  ];
}

// MsgRedeemCollateral defines a SDK message for the Msg/RedeemCollateral request type.
message MsgRedeemCollateral {
  // address is the Bech32-encoded address of the target account.
  string address = 1 [
    (gogoproto.moretags) = "yaml:\"address\""
  ];

  // hal_amount is the HAL token that should be exchanged to collateral tokens.
  cosmos.base.v1beta1.Coin hal_amount = 2 [
    (gogoproto.moretags) = "yaml:\"amount\"",
    (gogoproto.nullable) = false
  ];
}

// MsgMintHALResponse defines the Msg/RedeemCollateral response type.
message MsgRedeemCollateralResponse {
  // burned_amount is the HAL token converted amount (might be LT the requested amount).
  cosmos.base.v1beta1.Coin burned_amount = 1 [
    (gogoproto.moretags) = "yaml:\"burned_amount\"",
    (gogoproto.nullable) = false
  ];

  // redeemed_amount are collateral tokens that are transferred to an account after the redeeming timout.
  repeated cosmos.base.v1beta1.Coin redeemed_amount = 2 [
    (gogoproto.moretags) = "yaml:\"redeemed_amount\"",
    (gogoproto.nullable) = false
  ];

  // completion_time defines the redeeming period end time.
  google.protobuf.Timestamp completion_time = 3 [
    (gogoproto.moretags) = "yaml:\"completion_time\"",
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}
